<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uc.bpg.persistence.StrategeMapper">
  <resultMap id="strategeDetail" type="com.uc.bpg.domain.Stratege">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="UUID" jdbcType="CHAR" property="uuid" />
    <result column="CHARGE_STANDARD" jdbcType="DECIMAL" property="chargeStandard" />
    <result column="CHARGE" jdbcType="DECIMAL" property="charge" />
    <result column="RATIO" jdbcType="DECIMAL" property="ratio" />
    <result column="BILLING_CYCLE" jdbcType="VARCHAR" property="billingCycle"/>
    <result column="BILLING_DATE_PARAM1" jdbcType="INTEGER" property="billingDateParam1"/>
    <result column="BILLING_DATE_PARAM2" jdbcType="INTEGER" property="billingDateParam2"/>
    <result column="CREATER" jdbcType="INTEGER" property="creater" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="CRETER_NAME" jdbcType="VARCHAR" property="createrName"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="columns">
    a.ID, a.UUID, a.CHARGE_STANDARD, a.CHARGE, a.RATIO, a.BILLING_CYCLE, a.BILLING_DATE_PARAM1,a.BILLING_DATE_PARAM2, 
    a.CREATER, a.CREATE_TIME, b.NAME as CREATER_NAME
  </sql>
  <select id="selectById" parameterType="java.lang.Long" resultMap="strategeDetail">
    select 
    <include refid="columns" />
    from t_stratege a
    left join t_user b on b.ID=a.CREATER    
    where a.ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteDetail" parameterType="com.uc.bpg.domain.Stratege">
    delete from t_stratege
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertDetail" parameterType="com.uc.bpg.domain.Stratege">
    insert into t_stratege (UUID, CHARGE_STANDARD, 
      CHARGE, RATIO, BILLING_CYCLE, BILLING_DATE_PARAM1,
      BILLING_DATE_PARAM2,  CREATER, CREATE_TIME)
    values (#{uuid,jdbcType=CHAR}, #{chargeStandard,jdbcType=DECIMAL},  
      #{charge,jdbcType=DECIMAL}, #{ratio,jdbcType=DECIMAL}, 
      #{billingCycle,jdbcType=VARCHAR}, #{billingDateParam1,jdbcType=INTEGER}, 
      #{billingDateParam2,jdbcType=INTEGER},  #{creater,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateDetailSelective" parameterType="com.uc.bpg.domain.Stratege">
    update t_stratege
    <set>
      <if test="chargeStandard != null">
        CHARGE_STANDARD = #{chargeStandard,jdbcType=DECIMAL},
      </if>
      <if test="charge != null">
        CHARGE = #{charge,jdbcType=DECIMAL},
      </if>
      <if test="ratio != null">
        RATIO = #{ratio,jdbcType=DECIMAL},
      </if>
      <if test="billingCycle != null">
        BILLING_CYCLE = #{billingCycle,jdbcType=VARCHAR},
      </if>
      <if test="billingDateParam1 != null">
        BILLING_DATE_PARAM1 = #{billingDateParam1,jdbcType=INTEGER},
      </if>
      <if test="billingDateParam2 != null">
        BILLING_DATE_PARAM2 = #{billingDateParam2,jdbcType=INTEGER},
      </if>
      <if test="creater != null">
        CREATER = #{creater,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateDetail" parameterType="com.uc.bpg.domain.Stratege">
    update t_stratege
    set      
      CHARGE_STANDARD = #{chargeStandard,jdbcType=DECIMAL},
      CHARGE = #{charge,jdbcType=DECIMAL},
      RATIO = #{ratio,jdbcType=DECIMAL},
      BILLING_CYCLE = #{billingCycle,jdbcType=VARCHAR},
      BILLING_DATE_PARAM1 = #{billingDateParam1,jdbcType=INTEGER},
      BILLING_DATE_PARAM2 = #{billingDateParam2,jdbcType=INTEGER},
      CREATER = #{creater,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER};
    <if test="history!=null">
    insert into t_stratege_history (UUID, HOTEL, 
      TOTAL_DEVICE, PUBLIC_USAGE, CHARGE_STANDARD, 
      CHARGE, RATIO, BILLING_CYCLE, BILLING_DATE_PARAM1,
      BILLING_DATE_PARAM2, CREATER,  CREATE_TIME,
      MODIFIER, MODIFY_TIME)
    values (#{history.uuid,jdbcType=CHAR}, #{history.hotel,jdbcType=INTEGER}, 
      #{history.totalDevice,jdbcType=INTEGER}, #{history.publicUsage,jdbcType=INTEGER}, #{history.chargeStangard,jdbcType=DECIMAL}, 
      #{history.charge,jdbcType=DECIMAL}, #{history.ratio,jdbcType=DECIMAL}, #{history.billingCycle, jdbcType=VARCHAR},
      #{history.billingDateParam1, jdbcType=INTEGER},#{history.billingDateParam2, jdbcType=INTEGER},   
      #{history.creater,jdbcType=INTEGER}, #{history.createTime,jdbcType=TIMESTAMP},
      #{history.modifier, jdbcType=INTEGER}, #{history.modifyTime, jdbcType=TIMESTAMP})
    </if>    
  </update>
  <select id="selectIdByUuid" parameterType="java.lang.String" resultType="java.lang.Long">
    select ID 
    from t_stratege 
    where UUID=#{uuid,jdbcType=VARCHAR}
  </select>
  <select id="selectByUuid" parameterType="java.lang.String" resultMap="strategeDetail">
    select
    <include refid="columns" />
    from t_stratege a
    left join t_user b on b.ID=a.CREATER    
    where a.UUID=#{uuid,jdbcType=VARCHAR}
  </select>
</mapper>